from sklearn import preprocessing
from numpy import array
from numpy.linalg import norm
import numpy as np

def normalize_vector_l2(vector):
    return vector / norm(vector)


def main():
    # print("Hello")
    # vector = np.array([0.2560897285565272, 0.48294549755352745, 0.18274246576062644, 0.6582089112535234, 0.3631050791161236, 0.3321982898165305, 0.3769226168871438, 0.5689490430984424, 0.15437105768445203, 0.5907827652711706, 0.5281637932975896, 0.6325555786990072, 0.47567506712393726, 0.4678601221598233, 0.3343562746935991, 0.48528674613850437, 0.3339298617992779, 0.3737574538234153, 0.379612107319087, 0.3207391839914158, 0.2658695367062681, 0.11051423373288766, 0.3795117488120362, 0.4973574012817342, 0.28414580052122973, 0.36215799010423805, 0.41847484122164996, 0.22718571343093677, 0.3752871832181145, 0.5032772656882438, 0.5972309656156363, 0.23930766049298466, 0.3522272807490223, 0.4983123492182405, 0.5479871512687059, 0.5351927219218785, 0.47065560339055584, 0.6984813925754767, 0.7350128027807762, 0.5265915959952714, 0.2964267200434617, 0.3984294754488052, 0.32942635880981497, 0.40977457147659774, 0.4965672398367158, 0.19171276156794523, 0.49978043450277004, 0.3762095654174788, 0.5533877278260659, 0.4964761553905658, 0.4449579341180323, 0.37982198752685004, 0.3877635408968182, 0.5772038827378397, 0.5273460390444014, 0.20583374140784785, 0.3080575776005733, 1.0, 0.280162464614423, 0.0, 0.407659588972354, 0.27125732573180544, 0.3674139594493458, 0.4132063140290825, 0.15287622473804705, 0.47026563298431207, 0.307661242541456, 0.5402303888246079, 0.5437752463634119, 0.5349834558386781, 0.5169497887078366, 0.4509215736778859, 0.6656949267434984, 0.34979227681452746, 0.3797984428782394, 0.4714158469411846, 0.4466303514512407, 0.45681665053820836, 0.3889225680235088, 0.29823560581014225, 0.254073265856177, 0.5127658667032606, 0.4868648165585348, 0.4735883155314218, 0.6308613344383657, 0.556637132668111, 0.35202992191695537, 0.3160781448197685, 0.3500614083501376, 0.514725756249485, 0.36749639258931266, 0.6059105912693536, 0.5875853793198407, 0.410189316501931, 0.3959352133747364, 0.3848189963796391, 0.26502662095413565, 0.3133081910315596, 0.24361341639082862, 0.3042530184192322, 0.5318023430614758, 0.34879045364989, 0.386395975696997, 0.5483313304117676, 0.4918287831498125, 0.6626816794739022, 0.43746430488783006, 0.4165088747903154, 0.2253220249440777, 0.3959492260563995, 0.7658609437433205, 0.38843670080502163, 0.6424674258137674, 0.3542827043291611, 0.2701953509848483, 0.18597926579152477, 0.35788263463222836, 0.46441033196322595, 0.2570322341557413, 0.47565713504423, 0.4101471031441339, 0.7039951330388572, 0.3858950606811428, 0.24918714111080256, 0.5173806759856285, 0.2793500476031539, 0.3674547523912733, 0.40736524876344093])
    # l2 = norm(vector)
    # print(l2)
    # vector = vector / l2
    # print(vector)
    #
    # rl = np.outer(np.linspace(-2, 2, 5), np.linspace(-2, 2, 5))
    # print(rl)

    embedding_dimension = 5
    vocab_size = 9
    low = -((np.sqrt(6)) / (np.sqrt((vocab_size + embedding_dimension))))
    high = ((np.sqrt(6)) / (np.sqrt((vocab_size + embedding_dimension))))
    w2 = np.random.uniform(low, high, (embedding_dimension, vocab_size))
    # w2 = w2.T
    # print(w2)
    # print("---------------")
    # print(w2[1])
    # print("---------------")
    # print(w2[:][1])
    # print("---------------")
    x = np.array([0,0,0,0,0,1,0,0,0])
    e = np.array([0.2,0.30,0.6,0.5,0.3,0.2,0.1,0.8,0.9])
    print("error: " + str(x - e))
    e = e.reshape((e.shape[0],1))
    print(w2)
    print(np.dot(w2, e))
    dl_dw1 = np.outer(x, np.dot(w2, e))
    print(dl_dw1)

    from urllib.parse import urlparse
    url = 'http://chem2bio2rdf.org/pubchem/resource/pubchem_compound/44592769'
    parsed = urlparse(url)
    parts = parsed.path.split("/")
    entity = parts[-1].strip("0")
    filtered_entity = entity.split(":")[-1].strip("0")
    print(filtered_entity)


if __name__ == "__main__":
    main()